n_cpu_heavy.py  ——  纯CPU暴力循环训练，吃满指定核心
usage:
        python3 main_cpu_heavy.py --train     # 训练
            python3 main_cpu_heavy.py traffic.pcap   # 用最后一轮模型推理
            """
            import os
            # 限制低层线程，避免多层并行超订阅
            os.environ.setdefault('OMP_NUM_THREADS', '1')
            os.environ.setdefault('MKL_NUM_THREADS', '1')

            import re, json, pickle, time, bz2
            from pathlib import Path
            from collections import defaultdict
            import numpy as np
            from tqdm import tqdm
            from sklearn.ensemble import RandomForestClassifier
            from sklearn.svm import LinearSVC

            from scapy.all import rdpcap, TCP, UDP, IP, Raw
            from sklearn.base import BaseEstimator, TransformerMixin
            from sklearn.pipeline import Pipeline, FeatureUnion
            from sklearn.feature_extraction.text import HashingVectorizer
            from sklearn.preprocessing import StandardScaler
            from sklearn.metrics import classification_report
            from sklearn.model_selection import StratifiedKFold

            # ---------- 配置 ----------
            PCAP_DIR      = Path("./pcap_file")          # 当前目录
            MODEL_PATH    = "flag_hunter_cpu50.pkl"
            N_ROUND       = 10000         # 改为 10000 次
            N_FOLD        = 5
            HASH_DIM      = 2 ** 18
            NGRAM_RANGE   = (1, 4)
            FLAG_RE       = re.compile(rb"(flag{[^}]+}|FLAG_[^\s]+|ctf{[^}]+})", re.I)
            PARSE_PROCS   = 16            # 解析用进程数
            RF_JOBS       = 16            # RandomForest 并行核数
            SNAPSHOT_EVERY = 50           # 每隔多少轮保存一次快照
            # --------------------------

            # ---------- 通用工具 ----------
            class ProtocolOneHot(BaseEstimator, TransformerMixin):
                def fit(self, X, y=None): return self
                    def transform(self, X):
                            protos = ['tcp', 'udp', 'icmp', 'dns', 'http', 'tls', 'other']
                                    return np.array([[int(x.get(p, 0)) for p in protos] for x in X])

                                    class StatsFeats(BaseEstimator, TransformerMixin):
                                        def fit(self, X, y=None): return self
                                            def transform(self, X):
                                                    keys = ['pkts', 'bytes', 'entropy', 'ttl_std', 'comp_ratio']
                                                            return np.array([[x[k] for k in keys] for x in X])

                                                            def entropy(b):
                                                                if not b: return 0
                                                                    cnt = np.bincount(np.frombuffer(b, dtype=np.uint8))
                                                                        cnt = cnt[cnt > 0]
                                                                            probs = cnt / len(b)
                                                                                return -np.sum(probs * np.log2(probs))

                                                                                def _get_payload_str(x):
                                                                                    return x if isinstance(x, str) else x['payload_str']

                                                                                    # ---------- 解析 ----------
                                                                                    def pcap_to_samples(pcap_path: Path):
                                                                                        samples, labels = [], []
                                                                                            try:
                                                                                                    pkts = rdpcap(str(pcap_path))
                                                                                                        except Exception as e:
                                                                                                                print(f"[!] skip {pcap_path}: {e}")
                                                                                                                        return samples, labels

                                                                                                                            flow = defaultdict(bytes)
                                                                                                                                for p in pkts:
                                                                                                                                        if IP in p:
                                                                                                                                                    if TCP in p and Raw in p:
                                                                                                                                                                    key = tuple(sorted([(p[IP].src, p[TCP].sport),
                                                                                                                                                                                                        (p[IP].dst, p[TCP].dport)]))
                                                                                                                                                                                                                        flow[key] += p[Raw].load
                                                                                                                                                                                                                                    elif UDP in p and Raw in p:
                                                                                                                                                                                                                                                    key = tuple(sorted([(p[IP].src, p[UDP].sport),
                                                                                                                                                                                                                                                                                        (p[IP].dst, p[UDP].dport)]))
                                                                                                                                                                                                                                                                                                        flow[key] += p[Raw].load

                                                                                                                                                                                                                                                                                                            for payload in flow.values():
                                                                                                                                                                                                                                                                                                                    if len(payload) < 16: continue
                                                                                                                                                                                                                                                                                                                            # 自动标签
                                                                                                                                                                                                                                                                                                                                    label = 1 if (FLAG_RE.search(payload) or
                                                                                                                                                                                                                                                                                                                                                          (7.8 < entropy(payload) < 7.99 and len(payload) < 2 * 1024 * 1024 and
                                                                                                                                                                                                                                                                                                                                                                                 any(m in payload for m in [b'\x89PNG', b'\xff\xd8', b'PK\x03\x04', b'%PDF']))) else 0
                                                                                                                                                                                                                                                                                                                                                                                         try:
                                                                                                                                                                                                                                                                                                                                                                                                     comp = bz2.compress(payload)
                                                                                                                                                                                                                                                                                                                                                                                                                 comp_ratio = len(payload) / (len(comp) + 1e-6)
                                                                                                                                                                                                                                                                                                                                                                                                                         except Exception:
                                                                                                                                                                                                                                                                                                                                                                                                                                     comp_ratio = 1.0
                                                                                                                                                                                                                                                                                                                                                                                                                                             feat = {
                                                                                                                                                                                                                                                                                                                                                                                                                                                         'tcp': 1,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'udp': 0,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 'pkts': 0,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             'bytes': len(payload),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         'entropy': entropy(payload),
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'ttl_std': 0,
comp_ratio': comp_ratio,
payload_str': payload[:4096].decode('latin1', 'ignore')
}
samples.append(feat)
labels.append(label)
return samples, labels

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         # ---------- 训练 ----------
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         def train():
pcap_files = list(PCAP_DIR.glob("*.pcap"))
if not pcap_files:
print("[!] 当前目录无 .pcap 训练文件"); return

from multiprocessing import Pool

解析阶段并行，固定 PARSE_PROCS 进程
with Pool(processes=PARSE_PROCS) as pool:
results = list(tqdm(pool.imap(pcap_to_samples, pcap_files),
total=len(pcap_files), desc="parse"))

all_X = sum([r[0] for r in results], [])
all_y_list = sum([list(r[1]) for r in results], [])
if len(all_X) == 0:
print("[!] 无可用样本"); return
all_y = np.array(all_y_list, dtype=int)
print(f"[*] 总样本 {len(all_X)}  正例 {all_y.sum()}")

proto_feat = ProtocolOneHot()
stats_feat = StatsFeats()
text_vec   = HashingVectorizer(alternate_sign=False, n_features=HASH_DIM,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ngram_range=NGRAM_RANGE, analyzer='char',
preprocessor=_get_payload_str)
union = FeatureUnion([
proto', proto_feat),
stats', stats_feat),
text',  text_vec)


best_clf, best_score = None, 0.0
skf = StratifiedKFold(n_splits=N_FOLD, shuffle=True
